{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denny\\\\Desktop\\\\Epicode MongoDB\\\\Epicode-MongoDB\\\\frontend\\\\src\\\\components\\\\author\\\\author.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authorList = () => {\n  _s();\n  const [authors, setAuthors] = useState([]);\n  const authorsData = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BASEURL}/authors`);\n      const data = await response.json();\n      setAuthors(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    authorsData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: authors.map(author => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: author.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(authorList, \"RnpXyQPbvznNLdmfeG521obsnXU=\");\nexport default authorList;","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","authorList","_s","authors","setAuthors","authorsData","response","fetch","process","env","REACT_APP_BASEURL","data","json","error","console","log","children","map","author","name","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/denny/Desktop/Epicode MongoDB/Epicode-MongoDB/frontend/src/components/author/author.jsx"],"sourcesContent":["import {useEffect, useState} from 'react'\r\n\r\nconst authorList = () => {\r\n\r\n  const [authors, setAuthors] = useState([])\r\n\r\n  const authorsData = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_BASEURL}/authors`)\r\n      const data = await response.json()\r\n      setAuthors(data)\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    authorsData()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {authors.map(author => (\r\n        <p>{author.name}</p>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default authorList;"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,UAAU,CAAC;MACxE,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCR,UAAU,CAACO,IAAI,CAAC;IAElB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAI;IACZQ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAgB,QAAA,EACGb,OAAO,CAACc,GAAG,CAACC,MAAM,iBACjBlB,OAAA;MAAAgB,QAAA,EAAIE,MAAM,CAACC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAArB,EAAA,CA1BKD,UAAU;AA4BhB,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}