{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denny\\\\Desktop\\\\Epicode MongoDB\\\\Epicode-MongoDB\\\\frontend\\\\src\\\\components\\\\allPosts\\\\AllPosts.jsx\",\n  _s = $RefreshSig$();\nimport Container from 'react-bootstrap/Container';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllPosts = props => {\n  _s();\n  const URL_ENDPOINT = \"http://localhost:3030/blogpost\";\n  const [blogPosts, setBlogPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const getAllPosts = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(URL_ENDPOINT);\n      const data = await response.json();\n      setIsLoading(false);\n      setBlogPosts(data);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: blogPosts.map(singlePost => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: singlePost.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AllPosts, \"T4kF0D/KbCn/6rnlFUCIfYTgZw0=\");\n_c = AllPosts;\nexport default AllPosts;\nvar _c;\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"names":["Container","Row","Col","useState","useEffect","jsxDEV","_jsxDEV","AllPosts","props","_s","URL_ENDPOINT","blogPosts","setBlogPosts","isLoading","setIsLoading","getAllPosts","response","fetch","data","json","error","console","log","message","children","map","singlePost","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/denny/Desktop/Epicode MongoDB/Epicode-MongoDB/frontend/src/components/allPosts/AllPosts.jsx"],"sourcesContent":["import Container from 'react-bootstrap/Container';\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst AllPosts = (props) => {\r\n\r\n    const URL_ENDPOINT = \"http://localhost:3030/blogpost\"\r\n\r\n    const [blogPosts, setBlogPosts] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const getAllPosts = async () => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await fetch(URL_ENDPOINT)\r\n            const data = await response.json()\r\n            setIsLoading(false)\r\n            setBlogPosts(data)\r\n            return data\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllPosts()\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <div>\r\n                        {blogPosts.map(singlePost => (\r\n                            <p>{singlePost.title}</p>\r\n                        ))}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AllPosts;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAExB,MAAMC,YAAY,GAAG,gCAAgC;EAErD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACP,YAAY,CAAC;MAC1C,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,YAAY,CAAC,KAAK,CAAC;MACnBF,YAAY,CAACM,IAAI,CAAC;MAClB,OAAOA,IAAI;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC9B;EACJ,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZW,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACN,SAAS;IAAAwB,QAAA,eACNlB,OAAA,CAACL,GAAG;MAAAuB,QAAA,eACAlB,OAAA,CAACJ,GAAG;QAAAsB,QAAA,eACAlB,OAAA;UAAAkB,QAAA,EACKb,SAAS,CAACc,GAAG,CAACC,UAAU,iBACrBpB,OAAA;YAAAkB,QAAA,EAAIE,UAAU,CAACC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAC3B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB,CAAC;AAAAtB,EAAA,CArCKF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}