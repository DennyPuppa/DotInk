{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denny\\\\Desktop\\\\Epicode MongoDB\\\\DotInk\\\\frontend\\\\src\\\\components\\\\allPost\\\\AllPosts.jsx\",\n  _s = $RefreshSig$();\nimport Container from 'react-bootstrap/Container';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SinglePost from '../singlePost/SinglePost';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllPosts = props => {\n  _s();\n  const [allPosts, setAllPosts] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const getAllPosts = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(process.env.REACT_APP_BASEURL + '/post');\n      const data = await response.json();\n      setIsLoading(false);\n      setAllPosts(data);\n      console.log(allPosts);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AllPosts, \"oVNMMYWmPGrtAXWeXwCkETGXG3c=\");\n_c = AllPosts;\nexport default AllPosts;\nvar _c;\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"names":["Container","Row","Col","SinglePost","useState","useEffect","jsxDEV","_jsxDEV","AllPosts","props","_s","allPosts","setAllPosts","isLoading","setIsLoading","getAllPosts","response","axios","get","process","env","REACT_APP_BASEURL","data","json","console","log","error","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/denny/Desktop/Epicode MongoDB/DotInk/frontend/src/components/allPost/AllPosts.jsx"],"sourcesContent":["import Container from 'react-bootstrap/Container';\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport SinglePost from '../singlePost/SinglePost';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst AllPosts = (props) => {\r\n\r\n    const [allPosts, setAllPosts] = useState()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const getAllPosts = async () => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await axios.get(process.env.REACT_APP_BASEURL + '/post')\r\n            const data = await response.json()\r\n            setIsLoading(false)\r\n            setAllPosts(data)\r\n            console.log(allPosts);\r\n            return data\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllPosts()\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AllPosts;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,OAAO,CAAC;MACzE,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCT,YAAY,CAAC,KAAK,CAAC;MACnBF,WAAW,CAACU,IAAI,CAAC;MACjBE,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;MACrB,OAAOW,IAAI;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;IAC9B;EACJ,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZU,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA,CAACP,SAAS;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEpB,CAAC;AAAArB,EAAA,CA5BKF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}