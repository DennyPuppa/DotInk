{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denny\\\\Desktop\\\\Epicode MongoDB\\\\DotInk\\\\frontend\\\\src\\\\components\\\\allEvents\\\\AllEvent.jsx\",\n  _s = $RefreshSig$();\nimport Container from 'react-bootstrap/Container';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllEvent = props => {\n  _s();\n  const [allEvent, setAllEvent] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const getAllEvent = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(process.env.REACT_APP_BASEURL + '/event');\n      const data = await response.json();\n      setIsLoading(false);\n      setAllEvent(data);\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    getAllEvent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: allEvent.map((event, index) => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(SinglePost, {\n          title: post.title,\n          cover: post.cover,\n          author: post.author,\n          category: post.category,\n          _id: post._id,\n          readTime: post.readTime.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, `singleevent-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)).reverse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(AllEvent, \"yI8pIVMGm480DaeJu8B14BGM2A0=\");\n_c = AllEvent;\nexport default AllEvent;\nvar _c;\n$RefreshReg$(_c, \"AllEvent\");","map":{"version":3,"names":["Container","useState","useEffect","jsxDEV","_jsxDEV","AllEvent","props","_s","allEvent","setAllEvent","isLoading","setIsLoading","getAllEvent","response","fetch","process","env","REACT_APP_BASEURL","data","json","console","log","error","message","children","Row","map","event","index","Col","xs","md","lg","SinglePost","title","post","cover","author","category","_id","readTime","value","fileName","_jsxFileName","lineNumber","columnNumber","reverse","_c","$RefreshReg$"],"sources":["C:/Users/denny/Desktop/Epicode MongoDB/DotInk/frontend/src/components/allEvents/AllEvent.jsx"],"sourcesContent":["import Container from 'react-bootstrap/Container';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst AllEvent = (props) => {\r\n\r\n    const [allEvent, setAllEvent] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const getAllEvent = async () => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await fetch(process.env.REACT_APP_BASEURL + '/event')\r\n            const data = await response.json()\r\n            setIsLoading(false)\r\n            setAllEvent(data)\r\n            console.log(data);\r\n            return data\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllEvent()\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n           <Row>\r\n            {allEvent.map((event, index) => (\r\n                    <Col key={`singleevent-${index}`} xs={12} md={4} lg={3}>\r\n                        <SinglePost\r\n                            title={post.title}\r\n                            cover={post.cover}\r\n                            author={post.author}\r\n                            category={post.category}\r\n                            _id={post._id}\r\n                            readTime={post.readTime.value}\r\n                        />\r\n                    </Col>\r\n                )).reverse()}\r\n            </Row> \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AllEvent;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,QAAQ,CAAC;MACtE,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCR,YAAY,CAAC,KAAK,CAAC;MACnBF,WAAW,CAACS,IAAI,CAAC;MACjBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,OAAOA,IAAI;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;IAC9B;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZU,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA,CAACJ,SAAS;IAAAwB,QAAA,eACPpB,OAAA,CAACqB,GAAG;MAAAD,QAAA,EACFhB,QAAQ,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACnBxB,OAAA,CAACyB,GAAG;QAA8BC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAR,QAAA,eACnDpB,OAAA,CAAC6B,UAAU;UACPC,KAAK,EAAEC,IAAI,CAACD,KAAM;UAClBE,KAAK,EAAED,IAAI,CAACC,KAAM;UAClBC,MAAM,EAAEF,IAAI,CAACE,MAAO;UACpBC,QAAQ,EAAEH,IAAI,CAACG,QAAS;UACxBC,GAAG,EAAEJ,IAAI,CAACI,GAAI;UACdC,QAAQ,EAAEL,IAAI,CAACK,QAAQ,CAACC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC;MAAC,GARI,eAAejB,KAAK,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAS3B,CACR,CAAC,CAACC,OAAO,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB,CAAC;AAAAtC,EAAA,CAzCKF,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}